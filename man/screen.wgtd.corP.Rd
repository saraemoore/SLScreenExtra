% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/corr.R
\name{screen.wgtd.corP}
\alias{screen.wgtd.corP}
\title{Weighted correlation screening algorithm}
\usage{
screen.wgtd.corP(Y, X, family, obsWeights, id, method = "pearson",
  minPvalue = 0.1, minscreen = 2, ...)
}
\arguments{
\item{Y}{Outcome (numeric vector). See \code{\link[SuperLearner]{SuperLearner}}
for specifics.}

\item{X}{Predictor variable(s) (data.frame or matrix). See
\code{\link[SuperLearner]{SuperLearner}} for specifics.}

\item{family}{Error distribution to be used in the model:
\code{\link[stats]{gaussian}} or \code{\link[stats]{binomial}}.
Currently unused. See \code{\link[SuperLearner]{SuperLearner}} for
specifics.}

\item{obsWeights}{Optional numeric vector of observation weights. See
\code{\link[SuperLearner]{SuperLearner}} for specifics.}

\item{id}{Cluster identification variable. Currently unused.}

\item{method}{Which correlation coefficient to compute. Currently only
accepts \code{"pearson"}.}

\item{minPvalue}{To pass the screen, resulting P-values must not exceed this
number.}

\item{minscreen}{Minimum number of features to select (aka rank). Only used
if less than this number of features are selected using \code{minPvalue}.}

\item{...}{Passed to \code{\link[weights]{wtd.cor}}. These arguments control
bootstrapping of P-values and standard errors as well as forced scaling of
weights.}
}
\value{
A logical vector with length equal to \code{ncol(X)}
}
\description{
Performs feature selection according to the ranking of P-values
returned from weighted correlations.
}
\examples{
# based on example in SuperLearner package
set.seed(1)
n <- 100
p <- 20
X <- matrix(rnorm(n*p), nrow = n, ncol = p)
X <- data.frame(X)
Y <- X[, 1] + sqrt(abs(X[, 2] * X[, 3])) + X[, 2] - X[, 3] + rnorm(n)
obsWeights <- 1/runif(n)
screen.wgtd.corP(Y, X, gaussian(), obsWeights, seq(n), minPvalue = 0.000001)

screen.wgtd.corP01 <- function(..., minPvalue = 0.01){
    screen.wgtd.corP(..., minPvalue = minPvalue)
}

library(SuperLearner)
sl = SuperLearner(Y, X, family = gaussian(), cvControl = list(V = 2),
                  obsWeights = obsWeights,
                  SL.library = list(c("SL.glm", "All"),
                                    c("SL.glm.interaction", "screen.wgtd.corP01")))
sl
sl$whichScreen
}
