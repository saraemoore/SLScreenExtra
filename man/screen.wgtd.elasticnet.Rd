% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/regularizedregr.R
\name{screen.wgtd.elasticnet}
\alias{screen.wgtd.elasticnet}
\alias{screen.wgtd.lasso}
\title{Weighted regularized regression screening algorithm}
\usage{
screen.wgtd.elasticnet(Y, X, family, obsWeights, id, alpha = 0.5, k = 2,
  nfolds = 10, nlambda = 100, ...)

screen.wgtd.lasso(..., alpha = 1)
}
\arguments{
\item{Y}{Outcome (numeric vector). See \code{\link[SuperLearner]{SuperLearner}}
for specifics.}

\item{X}{Predictor variable(s) (data.frame or matrix). See
\code{\link[SuperLearner]{SuperLearner}} for specifics.}

\item{family}{Error distribution to be used in the model:
\code{\link[stats]{gaussian}} or \code{\link[stats]{binomial}}.
See \code{\link[SuperLearner]{SuperLearner}} for specifics.}

\item{obsWeights}{Optional numeric vector of observation weights. See
\code{\link[SuperLearner]{SuperLearner}} for specifics.}

\item{id}{Cluster identification variable. Currently unused.}

\item{alpha}{The elasticnet mixing parameter. Default for
\code{screen.wgtd.elasticnet} is (arbitrarily) \code{0.5}. Forced to
\code{1} for \code{screen.wgtd.lasso}. See \code{\link[glmnet]{glmnet}} for
specifics.}

\item{k}{Minimum number of features to select. Only used if fewer than this
number of features are selected using the optimal \code{lambda} value chosen
via cross-validation.}

\item{nfolds}{Number of cross-validation folds to use when choosing optimal
\code{lambda}. Default is \code{10}. See \code{\link[glmnet]{cv.glmnet}} for
specifics.}

\item{nlambda}{Number of \code{lambda} values to try. Default is \code{100}.
See \code{\link[glmnet]{glmnet}} for specifics.}

\item{...}{Currently unused.}
}
\value{
A logical vector with length equal to \code{ncol(X)}
}
\description{
Performs feature selection via \code{\link[glmnet]{cv.glmnet}}.
}
\examples{
# based on example in SuperLearner package
set.seed(1)
n <- 100
p <- 20
X <- matrix(rnorm(n*p), nrow = n, ncol = p)
X <- data.frame(X)
Y <- X[, 1] + sqrt(abs(X[, 2] * X[, 3])) + X[, 2] - X[, 3] + rnorm(n)
obsWeights <- 1/runif(n)
screen.wgtd.elasticnet(Y, X, gaussian(), obsWeights, seq(n), k = 3)
screen.wgtd.lasso(Y, X, gaussian(), obsWeights, seq(n), k = 3)
}
